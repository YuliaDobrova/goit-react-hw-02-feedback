{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/statistics/Statistics.js","components/main/Main.js","App.js","index.js"],"names":["FeedbackOptions","options","leaveFeedback","map","option","type","name","onClick","toUpperCase","Notification","message","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Main","state","event","setState","prev","target","this","Object","keys","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAceA,EAZS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAQC,KAAK,SAASC,KAAMF,EAAQG,QAASL,EAA7C,SACGE,EAAOI,sBCDHC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCoBEC,EArBI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,+BACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,oDAEGC,IAAkCC,QAAQ,GAF7C,WC2CSC,E,4MApDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,cAAgB,SAACkB,GACf,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAMG,OAAOjB,KAAOgB,EAAKF,EAAMG,OAAOjB,MAAQ,O,EAInDS,mBAAqB,WACnB,OAAO,EAAKI,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAG3DE,gCAAkC,WAChC,OAAkC,IAA9B,EAAKD,qBACA,EAED,EAAKI,MAAMP,KAAO,EAAKG,qBAAwB,K,4CAGzD,WACE,OACE,qCACE,oCACE,yDACA,cAAC,EAAD,CACEb,cAAesB,KAAKtB,cACpBD,QAASwB,OAAOC,KAAKF,KAAKL,YAG9B,oCACE,4CACCK,KAAKT,qBACJ,cAAC,EAAD,2BACMS,KAAKL,OADX,IAEEJ,mBAAoBS,KAAKT,mBACzBC,gCACEQ,KAAKR,mCAIT,cAAC,EAAD,CAAcN,QAAQ,gC,GA7CfiB,aCMJC,EARH,WACV,OACE,mCACE,cAAC,EAAD,O,MCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45572e9c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, leaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((option) => (\r\n        <button type=\"button\" name={option} onClick={leaveFeedback}>\r\n          {option.toUpperCase()}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      <li>Good:{good}</li>\r\n      <li>Neutral:{neutral}</li>\r\n      <li>Bad:{bad}</li>\r\n      <li>Total:{countTotalFeedback()}</li>\r\n      <li>\r\n        Positive feedback:\r\n        {countPositiveFeedbackPercentage().toFixed(2)}%\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions\";\r\nimport Notification from \"../notification/Notification\";\r\nimport Statistics from \"../statistics/Statistics\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  leaveFeedback = (event) => {\r\n    this.setState((prev) => ({\r\n      [event.target.name]: prev[event.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    if (this.countTotalFeedback() === 0) {\r\n      return 0;\r\n    }\r\n    return (this.state.good / this.countTotalFeedback()) * 100;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section>\r\n          <h1> Please leave feedback </h1>\r\n          <FeedbackOptions\r\n            leaveFeedback={this.leaveFeedback}\r\n            options={Object.keys(this.state)}\r\n          />\r\n        </section>\r\n        <section>\r\n          <h2>Statistics</h2>\r\n          {this.countTotalFeedback() ? (\r\n            <Statistics\r\n              {...this.state}\r\n              countTotalFeedback={this.countTotalFeedback}\r\n              countPositiveFeedbackPercentage={\r\n                this.countPositiveFeedbackPercentage\r\n              }\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          )}\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./components/main/Main\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Main />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}